import { watchDirHandler } from "../watchDirHandler";
import { resolve } from "path";
import { getRegenerateExportFileDirectoryPath } from "../../utils/getRegenerateExportFileDirectoryPath";
import { generateExportFile } from "@autogen-export/core";

jest.mock("../../utils/getRegenerateExportFileDirectoryPath", () => ({
  getRegenerateExportFileDirectoryPath: jest.fn(() => {
    return ["/user/phmngocnghia/desktop", "/user/phmngocnghia"];
  })
}));

jest.mock("@autogen-export/core", () => ({
  generateExportFile: jest.fn()
}));

describe("watchDirHandler", () => {
  const watchDirHandlerInput = {
    path: resolve(__dirname, "../../__test__/"),
    generateExportFileParams: {
      babelConfigPath: resolve(__dirname, "../"),
      rootDirectory: resolve(__dirname, "./chokidarTestDirectory/"),
      fileExts: ["ts"],
      stripFileExts: ["ts"],
      generatedFileExt: "ts",
      ignoreDestinationRegexs: [/abc/, /xyz/]
    }
  };
  it("call generateIndexPaths to generate paths", () => {
    watchDirHandler(watchDirHandlerInput);
    expect(getRegenerateExportFileDirectoryPath).toHaveBeenCalledWith({
      rootDirectoryPath:
        watchDirHandlerInput.generateExportFileParams.rootDirectory,
      directoryPathOfFileChange: watchDirHandlerInput.path
    });
  });

  it("call generateExportFile for each path generated by getRegenerateExportFileDirectoryPath", () => {
    (generateExportFile as jest.Mock).mockClear();
    watchDirHandler(watchDirHandlerInput);
    expect(generateExportFile).toHaveBeenCalledTimes(2);
    expect(generateExportFile).toHaveBeenNthCalledWith(1, {
      babelConfigPath: resolve(__dirname, "../"),
      rootDirectory: "/user/phmngocnghia/desktop",
      fileExts: ["ts"],
      stripFileExts: ["ts"],
      generatedFileExt: "ts",
      ignoreDestinationRegexs: [/abc/, /xyz/]
    });
    expect(generateExportFile).toHaveBeenNthCalledWith(2, {
      babelConfigPath: resolve(__dirname, "../"),
      rootDirectory: "/user/phmngocnghia",
      fileExts: ["ts"],
      stripFileExts: ["ts"],
      generatedFileExt: "ts",
      ignoreDestinationRegexs: [/abc/, /xyz/]
    });
  });
});
